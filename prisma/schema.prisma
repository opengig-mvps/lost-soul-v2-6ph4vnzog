
  generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "rhel-openssl-3.0.x"]
  }
  
  datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
  }
        
model User {
  id               Int       @id @default(autoincrement())
  email            String    @unique
  password         String?
  username         String    @unique
  name             String?
  role             String    @default("buyer")
  googleId         String?   @unique
  isVerified       Boolean   @default(false)
  verificationToken String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  properties       Property[]
  bookings         Booking[]
  payments         Payment[]
}

model Property {
  id               Int       @id @default(autoincrement())
  title            String
  description      String
  price            Float
  images           String[]
  createdAt        DateTime  @default(now())
  
  updatedAt        DateTime  @updatedAt

  vendorId         Int
  vendor           User      @relation(fields: [vendorId], references: [id])

  bookings         Booking[]
}

model Booking {
  id               Int       @id @default(autoincrement())
  bookingDate      DateTime  @default(now())
  buyerId          Int
  propertyId       Int
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  buyer            User      @relation(fields: [buyerId], references: [id])
  property         Property  @relation(fields: [propertyId], references: [id])

  payment          Payment?
  reviews Review[]
  @@unique([buyerId, propertyId])
}

model Review {
  id               Int       @id @default(autoincrement())
  rating           Int
  comments         String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  bookingId        Int
  booking          Booking   @relation(fields: [bookingId], references: [id])
}

model Payment {
  id               Int       @id @default(autoincrement())
  amount           Float
  paymentStatus    String
  paymentDate      DateTime  @default(now())
  buyerId          Int
  bookingId        Int @unique
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  buyer            User      @relation(fields: [buyerId], references: [id])
  booking          Booking   @relation(fields: [bookingId], references: [id])
}